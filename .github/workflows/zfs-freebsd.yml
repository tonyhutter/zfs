name: Test_freebsd_runner

on: [push]

jobs:

  build:
    runs-on: macos-12
    name: A job to run test in FreeBSD
    env:
      MYTOKEN : ${{ secrets.MYTOKEN }}
      MYTOKEN2: "value2"
    strategy:
      fail-fast: false
      matrix:
        os: [freebsd-13]
        tests: [ part1, part2, part3, part4 ]
    steps:
    - uses: actions/checkout@v3
    - name: Setup FreeBSD VM
      id: test
      uses: vmactions/freebsd-vm@v0
      with:
        copyback: true
        mem: 2048
        envs: 'MYTOKEN MYTOKEN2'
        ref: ${{ github.event.pull_request.head.sha }}
        usesh: true
        timeout-minutes: 120
        
        prepare: |
          pkg install -y curl
        run: | 
            .github/workflows/scripts/setup-dependencies-freebsd.sh build
            .github/workflows/scripts/setup-dependencies-freebsd.sh tests
            .github/workflows/scripts/setup-functional.sh ${{ matrix.tests }} ./tests/zfs-tests/tests/functional >> /tmp/todo.sh
            chmod 777 /tmp/todo.sh
            pw useradd zfstest -s /usr/local/bin/bash -G wheel -w none
            echo "filelist:"
            echo 'ALL ALL = (ALL) NOPASSWD: ALL' >> /usr/local/etc/sudoers

            chown -R zfstest:wheel .
            echo "I AM $(whoami), TODO IS: $(cat /tmp/todo.sh)"
            echo "running: sudo -u zfstest ./scripts/zfs-tests.sh -vKR -s 3G -T $(. /tmp/todo.sh && echo $TODO)"
            sudo -u zfstest ./scripts/zfs-tests.sh -vKR -s 3G -T $(. /tmp/todo.sh && echo $TODO)
            rm -fr *
            RESPATH="/var/tmp/test_results"
            mv -f $(readlink -f $RESPATH/current) $RESPATH/testfiles
            tar cf ${{ matrix.tests }}.tar -h -C $RESPATH testfiles
            echo "results TAR readlink $(readlink -f $RESPATH/current):"
            ls -l *.tar
    - uses: actions/upload-artifact@v3
      if: success() || failure()
      with:
        name: Logs-${{ matrix.os }}-functional
        path: ${{ matrix.tests }}.tar
        if-no-files-found: ignore
    - uses: actions/download-artifact@v3
    - name: Generating summary
      run: |
        echo "Logs: $(ls -l Logs-freebsd-13-functional) ///  $(file Logs-freebsd-13-functional)"
        echo "SUMMARY files --- pwd $(pwd)"
        echo "test runner"
        ls -l test/test-runner/ || true
        echo "bin--"
        ls -l test/test-runner/bin || true
        echo "logs:"
        ls -l Logs-freebsd-13-functional || true
        echo "python $(which python)"
        echo "python2 $(which python2)"
        echo "python3 $(which python3)"
        mkdir -p tests/test-runner/bin/
        wget -O tests/test-runner/bin/zts-report.py.in https://raw.githubusercontent.com/openzfs/zfs/master/tests/test-runner/bin/zts-report.py.in
        sed 's/@PYTHON_SHEBANG@/python3/g' tests/test-runner/bin/zts-report.py.in > tests/test-runner/bin/zts-report.py
        chmod +x tests/test-runner/bin/zts-report.py
 
        if [ ! -e .github/workflows/scripts/generate-summary.sh ] ; then
          echo "wgetting generate-summary.sh"
          wget https://raw.githubusercontent.com/openzfs/zfs/master/.github/workflows/scripts/generate-summary.sh
          chmod +x generate-summary.sh
          ./generate-summary.sh
        else
          echo "we have generate-summary.sh"
          .github/workflows/scripts/generate-summary.sh
        fi

        echo "files in current dir:"
        ls -l
    # up to 4 steps, each can have 1 MiB output (for debugging log files)
    - name: Summary for errors #1
      run: .github/workflows/scripts/generate-summary.sh 1
    - name: Summary for errors #2
      run: .github/workflows/scripts/generate-summary.sh 2
    - name: Summary for errors #3
      run: .github/workflows/scripts/generate-summary.sh 3
    - name: Summary for errors #4
      run: .github/workflows/scripts/generate-summary.sh 4
    - uses: actions/upload-artifact@v3
      with:
        name: Summary Files
        path: Summary/



